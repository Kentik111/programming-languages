section .data ; объявление переменных
    n dq 4 ; заданнное число
    msg db "ZYXWVUTSRQPONMLKJIHGFEDCBA" ; переменная, соддержащая алфавит для паттерна
    new_line db 0dh,0ah ; символы новой строки (ASCII)
    msg_len db $ - msg ; вычисление длины строки msg и сохранение в msg_len.
    

section .text ; секция работы программы
    global _start ; 

_start: ; начало работы программы
   mov rbx,1 ;  загрузка 1 в регистр rbx (счётчик)


loop: ; цикл вывода сообщения

    mov rax, 1  ; 1 - номер системного вызова функции write
    mov rdi, 1  ; 1 - дескриптор файла стандартного вызова
    mov rsi, msg ; загрузка адреса строки сообщения в rsi (копирование строки в регистр)
    add rsi, 26 ;  сдвиг указателя на конец строки
    sub rsi, [n] ;  вычитание значения переменной n из указателя для "сдвига" начала строки.
    mov rdx, rbx ; количество символов для вывода (буквы алфавита).
    syscall ; системный вызов

    ; вывод символов каждой строки
    mov rax, 1
    mov rdi, 1
    mov rsi, new_line ; загрузка адреса символов новой строки в rsi
    mov rdx, 2 ; количество символов новой строки.
    syscall


inc rbx ; увеличение счётчика
cmp rbx, [n] ; сравнение счётчика с n
jbe loop ; повторение цикла, пока счётчик <= n

mov rax, 60 ; 60 - номер системного вызова exit
mov rdi, 0 ; код завершения (success)
syscall ; завершение программы